const studentModel = require('./studentModel');
const key = '123456789trytryrtyr';
const encryptor = require('simple-encryptor')(key);

module.exports.createStudentDBService = async (studentDetails) => {
  try {
    const encryptedPassword = encryptor.encrypt(studentDetails.password);
    const studentModelData = new studentModel({
      firstname: studentDetails.firstname,
      lastname: studentDetails.lastname,
      username: studentDetails.username,
      password: encryptedPassword,
    });

    await studentModelData.save();
    return true;
  } catch (error) {
    console.error(error);
    return false;
  }
};

module.exports.loginStudentDBService = async (studentDetails) => {
  try {
    const result = await studentModel.findOne({ username: studentDetails.username });

    if (!result) {
      throw { status: false, msg: "Student Error Details" };
    }

    const decrypted = encryptor.decrypt(result.password);

    if (decrypted === studentDetails.password) {
      return { status: true, msg: "Student Validated Successfully" };
    } else {
      return { status: false, msg: "Student Validated Failed" };
    }
  } catch (error) {
    console.error(error);
    throw { status: false, msg: "Invalid Data" };
  }
};

module.exports.getDataFromDBService = async () => {
  try {
    const result = await studentModel.find({});
    return result;
  } catch (error) {
    console.error(error);
    throw false;
  }
};

module.exports.updateStudentDBService = async (id, studentDetails) => {
  try {
    const result = await studentModel.findByIdAndUpdate(id, studentDetails, { new: true });
    return result;
  } catch (error) {
    console.error(error);
    throw false;
  }
};

module.exports.removeStudentDBService = async (id) => {
  try {
    const result = await studentModel.findByIdAndDelete(id);
    return result;
  } catch (error) {
    console.error(error);
    throw false;
  }
};
